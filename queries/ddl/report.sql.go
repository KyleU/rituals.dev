// Code generated by qtc from "report.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// -- Content managed by Project Forge, see [projectforge.md] for details.
// --

//line queries/ddl/report.sql:2
package ddl

//line queries/ddl/report.sql:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/ddl/report.sql:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/ddl/report.sql:2
func StreamReportDrop(qw422016 *qt422016.Writer) {
//line queries/ddl/report.sql:2
	qw422016.N().S(`
drop table if exists "report";
-- `)
//line queries/ddl/report.sql:4
}

//line queries/ddl/report.sql:4
func WriteReportDrop(qq422016 qtio422016.Writer) {
//line queries/ddl/report.sql:4
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/report.sql:4
	StreamReportDrop(qw422016)
//line queries/ddl/report.sql:4
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/report.sql:4
}

//line queries/ddl/report.sql:4
func ReportDrop() string {
//line queries/ddl/report.sql:4
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/report.sql:4
	WriteReportDrop(qb422016)
//line queries/ddl/report.sql:4
	qs422016 := string(qb422016.B)
//line queries/ddl/report.sql:4
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/report.sql:4
	return qs422016
//line queries/ddl/report.sql:4
}

// --

//line queries/ddl/report.sql:6
func StreamReportCreate(qw422016 *qt422016.Writer) {
//line queries/ddl/report.sql:6
	qw422016.N().S(`
create table if not exists "report" (
  "id" uuid not null,
  "standup_id" uuid not null,
  "d" timestamp not null,
  "user_id" uuid not null,
  "content" text not null,
  "html" text not null,
  "created" timestamp not null default now(),
  "updated" timestamp default now(),
  foreign key ("standup_id") references "standup" ("id"),
  foreign key ("user_id") references "user" ("id"),
  primary key ("id")
);

create index if not exists "report__standup_id_idx" on "report" ("standup_id");

create index if not exists "report__user_id_idx" on "report" ("user_id");
-- `)
//line queries/ddl/report.sql:24
}

//line queries/ddl/report.sql:24
func WriteReportCreate(qq422016 qtio422016.Writer) {
//line queries/ddl/report.sql:24
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/report.sql:24
	StreamReportCreate(qw422016)
//line queries/ddl/report.sql:24
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/report.sql:24
}

//line queries/ddl/report.sql:24
func ReportCreate() string {
//line queries/ddl/report.sql:24
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/report.sql:24
	WriteReportCreate(qb422016)
//line queries/ddl/report.sql:24
	qs422016 := string(qb422016.B)
//line queries/ddl/report.sql:24
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/report.sql:24
	return qs422016
//line queries/ddl/report.sql:24
}
