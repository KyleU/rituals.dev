// Code generated by qtc from "retro_permission.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// --

//line queries/ddl/retro_permission.sql:1
package ddl

//line queries/ddl/retro_permission.sql:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/ddl/retro_permission.sql:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/ddl/retro_permission.sql:1
func StreamRetroPermissionDrop(qw422016 *qt422016.Writer) {
//line queries/ddl/retro_permission.sql:1
	qw422016.N().S(`
drop table if exists "retro_permission";
-- `)
//line queries/ddl/retro_permission.sql:3
}

//line queries/ddl/retro_permission.sql:3
func WriteRetroPermissionDrop(qq422016 qtio422016.Writer) {
//line queries/ddl/retro_permission.sql:3
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/retro_permission.sql:3
	StreamRetroPermissionDrop(qw422016)
//line queries/ddl/retro_permission.sql:3
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/retro_permission.sql:3
}

//line queries/ddl/retro_permission.sql:3
func RetroPermissionDrop() string {
//line queries/ddl/retro_permission.sql:3
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/retro_permission.sql:3
	WriteRetroPermissionDrop(qb422016)
//line queries/ddl/retro_permission.sql:3
	qs422016 := string(qb422016.B)
//line queries/ddl/retro_permission.sql:3
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/retro_permission.sql:3
	return qs422016
//line queries/ddl/retro_permission.sql:3
}

// --

//line queries/ddl/retro_permission.sql:5
func StreamRetroPermissionCreate(qw422016 *qt422016.Writer) {
//line queries/ddl/retro_permission.sql:5
	qw422016.N().S(`
create table if not exists "retro_permission" (
  "retro_id" uuid not null,
  "key" text not null,
  "value" text not null,
  "access" text not null,
  "created" timestamp not null default now(),
  foreign key ("retro_id") references "retro" ("id"),
  primary key ("retro_id", "key", "value")
);

create index if not exists "retro_permission__retro_id_idx" on "retro_permission" ("retro_id");

create index if not exists "retro_permission__key_idx" on "retro_permission" ("key");

create index if not exists "retro_permission__value_idx" on "retro_permission" ("value");
-- `)
//line queries/ddl/retro_permission.sql:21
}

//line queries/ddl/retro_permission.sql:21
func WriteRetroPermissionCreate(qq422016 qtio422016.Writer) {
//line queries/ddl/retro_permission.sql:21
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/retro_permission.sql:21
	StreamRetroPermissionCreate(qw422016)
//line queries/ddl/retro_permission.sql:21
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/retro_permission.sql:21
}

//line queries/ddl/retro_permission.sql:21
func RetroPermissionCreate() string {
//line queries/ddl/retro_permission.sql:21
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/retro_permission.sql:21
	WriteRetroPermissionCreate(qb422016)
//line queries/ddl/retro_permission.sql:21
	qs422016 := string(qb422016.B)
//line queries/ddl/retro_permission.sql:21
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/retro_permission.sql:21
	return qs422016
//line queries/ddl/retro_permission.sql:21
}
