// Code generated by qtc from "feedback.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// --

//line queries/ddl/feedback.sql:1
package ddl

//line queries/ddl/feedback.sql:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/ddl/feedback.sql:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/ddl/feedback.sql:1
func StreamFeedbackDrop(qw422016 *qt422016.Writer) {
//line queries/ddl/feedback.sql:1
	qw422016.N().S(`
drop table if exists "feedback";
-- `)
//line queries/ddl/feedback.sql:3
}

//line queries/ddl/feedback.sql:3
func WriteFeedbackDrop(qq422016 qtio422016.Writer) {
//line queries/ddl/feedback.sql:3
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/feedback.sql:3
	StreamFeedbackDrop(qw422016)
//line queries/ddl/feedback.sql:3
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/feedback.sql:3
}

//line queries/ddl/feedback.sql:3
func FeedbackDrop() string {
//line queries/ddl/feedback.sql:3
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/feedback.sql:3
	WriteFeedbackDrop(qb422016)
//line queries/ddl/feedback.sql:3
	qs422016 := string(qb422016.B)
//line queries/ddl/feedback.sql:3
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/feedback.sql:3
	return qs422016
//line queries/ddl/feedback.sql:3
}

// --

//line queries/ddl/feedback.sql:5
func StreamFeedbackCreate(qw422016 *qt422016.Writer) {
//line queries/ddl/feedback.sql:5
	qw422016.N().S(`
create table if not exists "feedback" (
  "id" uuid not null,
  "retro_id" uuid not null,
  "idx" int not null,
  "user_id" uuid not null,
  "category" text not null,
  "content" text not null,
  "html" text not null,
  "created" timestamp not null default now(),
  "updated" timestamp default now(),
  foreign key ("retro_id") references "retro" ("id"),
  foreign key ("user_id") references "user" ("id"),
  primary key ("id")
);

create index if not exists "feedback__retro_id_idx" on "feedback" ("retro_id");

create index if not exists "feedback__user_id_idx" on "feedback" ("user_id");
-- `)
//line queries/ddl/feedback.sql:24
}

//line queries/ddl/feedback.sql:24
func WriteFeedbackCreate(qq422016 qtio422016.Writer) {
//line queries/ddl/feedback.sql:24
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/ddl/feedback.sql:24
	StreamFeedbackCreate(qw422016)
//line queries/ddl/feedback.sql:24
	qt422016.ReleaseWriter(qw422016)
//line queries/ddl/feedback.sql:24
}

//line queries/ddl/feedback.sql:24
func FeedbackCreate() string {
//line queries/ddl/feedback.sql:24
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/ddl/feedback.sql:24
	WriteFeedbackCreate(qb422016)
//line queries/ddl/feedback.sql:24
	qs422016 := string(qb422016.B)
//line queries/ddl/feedback.sql:24
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/ddl/feedback.sql:24
	return qs422016
//line queries/ddl/feedback.sql:24
}
