// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/layout/navbar.html
// DO NOT EDIT!
package templates

import (
	"bytes"

	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func Navbar(ctx web.RequestContext, buffer *bytes.Buffer) {
	buffer.WriteString(`
<header>
  <div data-uk-sticky="sel-target: .uk-navbar-container; cls-active: data-uk-navbar-sticky">
    <nav id="navbar" class="uk-navbar-container `)
	hero.EscapeHTML(ctx.Profile.NavColor, buffer)
	buffer.WriteString(`-bg" data-uk-navbar>
      <div class="uk-navbar-left">
        <a title="`)
	hero.EscapeHTML(util.AppName, buffer)
	buffer.WriteString(`" class="uk-navbar-item uk-logo" href="`)
	hero.EscapeHTML(ctx.Route(`home`), buffer)
	buffer.WriteString(`">
          <span data-uk-icon="icon: git-fork; ratio: 1.6"></span>
        </a>
        `)
	BreadcrumbDisplay(ctx, buffer)
	buffer.WriteString(`
      </div>
      <div class="uk-navbar-right">
        <ul class="uk-navbar-nav">
          <li>
            `)
	if len(ctx.Profile.Picture) == 0 {
		buffer.WriteString(`
            <a href="`)
		hero.EscapeHTML(ctx.Route(`profile`), buffer)
		buffer.WriteString(`" data-uk-icon="icon:user" title="Profile"></a>
            `)
	} else {
		buffer.WriteString(`
            <a href="`)
		hero.EscapeHTML(ctx.Route(`profile`), buffer)
		buffer.WriteString(`" title="Profile">
              <img id="navbar-image" class="uk-border-circle" src="`)
		hero.EscapeHTML(ctx.Profile.Picture, buffer)
		buffer.WriteString(`" />
            </a>
            `)
	}
	buffer.WriteString(`
          </li>
        </ul>
      </div>
    </nav>
  </div>
</header>
`)

}
