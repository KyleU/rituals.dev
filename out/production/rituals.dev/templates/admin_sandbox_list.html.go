// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/admin/sandbox/list.html
// DO NOT EDIT!
package templates

import (
	"io"

	"github.com/kyleu/rituals.dev/app/sandbox"
	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func AdminSandboxList(sandboxes sandbox.Sandboxes, ctx web.RequestContext, w io.Writer) (int, error) {
	_buffer := hero.GetBuffer()
	defer hero.PutBuffer(_buffer)
	_buffer.WriteString(`<!DOCTYPE html>
<html lang="en">
`)
	Head(ctx, _buffer)
	_buffer.WriteString(`
<body style="visibility: hidden;">
`)
	Navbar(ctx, _buffer)
	_buffer.WriteString(`
<div id="`)
	hero.EscapeHTML(util.KeyContent, _buffer)
	_buffer.WriteString(`" data-uk-height-viewport="expand: true">
`)
	for _, flash := range ctx.Flashes {
		cls, content := web.ParseFlash(flash)
		_buffer.WriteString(`
  <div class="alert-top `)
		hero.EscapeHTML(cls, _buffer)
		_buffer.WriteString(`" data-uk-alert>
    <a class="uk-alert-close" href="#" data-uk-close=""></a>
    <p>`)
		hero.EscapeHTML(content, _buffer)
		_buffer.WriteString(`</p>
  </div>
`)
	}
	_buffer.WriteString(`
<div class="uk-section uk-section-small">
  <div class="uk-container">
    <div class="uk-grid-small uk-grid-match uk-child-width-expand@s" data-uk-grid>
      `)
	for _, s := range sandboxes {
		_buffer.WriteString(`
        <div>
          <div class="uk-card uk-card-body">
            <h3 class="uk-card-title"><a class="`)
		hero.EscapeHTML(ctx.Profile.LinkClass(), _buffer)
		_buffer.WriteString(`" href="`)
		hero.EscapeHTML(ctx.Route(util.AdminLink(util.KeySandbox, `run`), util.KeyKey, s.Key), _buffer)
		_buffer.WriteString(`">`)
		hero.EscapeHTML(s.Title, _buffer)
		_buffer.WriteString(`</a></h3>
            <p>`)
		hero.EscapeHTML(s.Description, _buffer)
		_buffer.WriteString(`</p>
          </div>
        </div>
      `)
	}
	_buffer.WriteString(`
    </div>
  </div>
</div>
`)

	_buffer.WriteString(`
</div>
<script>window.addEventListener("load", function() { dom.initDom('`)
	hero.EscapeHTML(ctx.Profile.Theme.String(), _buffer)
	_buffer.WriteString(`'); }, false)</script>
</body>
</html>
`)
	return w.Write(_buffer.Bytes())

}
