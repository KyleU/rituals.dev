// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/admin/story/detail.html
// DO NOT EDIT!
package templates

import (
	"fmt"
	"io"

	"github.com/kyleu/rituals.dev/app/estimate"
	"github.com/kyleu/rituals.dev/app/query"
	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func AdminStoryDetail(model *estimate.Story, votes estimate.Votes, params query.ParamSet, ctx web.RequestContext, w io.Writer) (int, error) {
	_buffer := hero.GetBuffer()
	defer hero.PutBuffer(_buffer)
	_buffer.WriteString(`<!DOCTYPE html>
<html lang="en">
`)
	Head(ctx, _buffer)
	_buffer.WriteString(`
<body style="visibility: hidden;">
`)
	Navbar(ctx, _buffer)
	_buffer.WriteString(`
<div id="`)
	hero.EscapeHTML(util.KeyContent, _buffer)
	_buffer.WriteString(`" data-uk-height-viewport="expand: true">
`)
	for _, flash := range ctx.Flashes {
		cls, content := web.ParseFlash(flash)
		_buffer.WriteString(`
  <div class="alert-top `)
		hero.EscapeHTML(cls, _buffer)
		_buffer.WriteString(`" data-uk-alert>
    <a class="uk-alert-close" href="#" data-uk-close=""></a>
    <p>`)
		hero.EscapeHTML(content, _buffer)
		_buffer.WriteString(`</p>
  </div>
`)
	}
	_buffer.WriteString(`
<div class="uk-section uk-section-small">
  <div class="uk-container">
    <div class="uk-card uk-card-body">
      <h3 class="uk-card-title">`)
	hero.EscapeHTML(ctx.Title, _buffer)
	_buffer.WriteString(`</h3>
      <table class="uk-table uk-table-divider uk-text-left">
        <tbody>
          <tr>
            <th>ID</th>
            <td>`)
	hero.EscapeHTML(model.ID.String(), _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Estimate</th>
            <td><a class="`)
	hero.EscapeHTML(ctx.Profile.LinkClass(), _buffer)
	_buffer.WriteString(`" href="`)
	hero.EscapeHTML(ctx.Route(util.AdminLink(util.SvcEstimate.Key, `detail`), `id`, model.EstimateID.String()), _buffer)
	_buffer.WriteString(`">`)
	hero.EscapeHTML(model.EstimateID.String(), _buffer)
	_buffer.WriteString(`</a></td>
          </tr>
          <tr>
            <th>Index</th>
            <td>`)
	hero.EscapeHTML(fmt.Sprintf("%v", model.Idx), _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Status</th>
            <td>`)
	hero.EscapeHTML(model.Status.String(), _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Title</th>
            <td>`)
	hero.EscapeHTML(model.Title, _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Author</th>
            <td><a class="`)
	hero.EscapeHTML(ctx.Profile.LinkClass(), _buffer)
	_buffer.WriteString(`" href="`)
	hero.EscapeHTML(ctx.Route(util.AdminLink(util.KeyUser, `detail`), `id`, model.AuthorID.String()), _buffer)
	_buffer.WriteString(`">`)
	hero.EscapeHTML(model.AuthorID.String(), _buffer)
	_buffer.WriteString(`</a></td>
          </tr>
          <tr>
            <th>Created</th>
            <td>`)
	ComponentDateTime(&model.Created, _buffer)
	_buffer.WriteString(`</td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class="uk-card uk-card-body uk-margin-top">
      <h3 class="uk-card-title">Votes</h3>
      `)
	if len(votes) == 0 {
		_buffer.WriteString(`
        <p>No votes available</p>
      `)
	} else {
		AdminVoteTable(votes, params.Get(util.KeyVote, ctx.Logger), ctx, _buffer)
	}
	_buffer.WriteString(`
    </div>
  </div>
</div>
`)

	_buffer.WriteString(`
</div>
<script>window.addEventListener("load", function() { dom.initDom('`)
	hero.EscapeHTML(ctx.Profile.Theme.String(), _buffer)
	_buffer.WriteString(`'); }, false)</script>
</body>
</html>
`)
	return w.Write(_buffer.Bytes())

}
