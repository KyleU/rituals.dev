// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/permission/provider.html
// DO NOT EDIT!
package templates

import (
	"bytes"

	"github.com/kyleu/rituals.dev/app/auth"
	"github.com/kyleu/rituals.dev/app/permission"
	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func PermissionProviderError(svc util.Service, provider *auth.Provider, errors permission.Errors, auths auth.Records, ctx web.RequestContext, buffer *bytes.Buffer) {
	if len(errors) > 0 {
		buffer.WriteString(`
  <li>
    <p>
      To access this `)
		hero.EscapeHTML(svc.Key, buffer)
		buffer.WriteString(`, you must sign in to <a class="`)
		hero.EscapeHTML(ctx.Profile.LinkClass(), buffer)
		buffer.WriteString(` profile-link" href="`)
		hero.EscapeHTML(ctx.Route(`auth.submit`, util.KeyKey, provider.Key), buffer)
		buffer.WriteString(`">`)
		hero.EscapeHTML(provider.Title, buffer)
		buffer.WriteString(`</a>
      `)
		var ms = errors.GetMatches()
		if len(ms) > 0 {
			buffer.WriteString(`
        using an email address from
        `)
			for idx, m := range ms {
				hero.EscapeHTML(m, buffer)
				if idx < len(ms)-1 {
					buffer.WriteString(`
            or
          `)
				}
			}
		}
		if len(auths) > 0 {
			buffer.WriteString(`
        (you are currently signed in as `)
			hero.EscapeHTML(util.OxfordComma(auths.Emails(), "and"), buffer)
			buffer.WriteString(`)
      `)
		}
		buffer.WriteString(`
    </p>
  </li>
`)
	}

}
