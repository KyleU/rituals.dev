// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/components/table-header.html
// DO NOT EDIT!
package templates

import (
	"bytes"

	"github.com/kyleu/rituals.dev/app/query"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func ComponentTableHeader(section string, key string, title string, params *query.Params, ctx web.RequestContext, buffer *bytes.Buffer) {
	if params == nil {
		params = &query.Params{Key: section}
		buffer.WriteString(`
  <th class="uk-transition-toggle uk-text-nowrap">
    <a class="`)
		hero.EscapeHTML(ctx.Profile.LinkClass(), buffer)
		buffer.WriteString(`" href="?`)
		hero.EscapeHTML(params.Clone(&query.Ordering{Column: key, Asc: true}).ToQueryString(ctx.Request), buffer)
		buffer.WriteString(`">
      `)
		hero.EscapeHTML(title, buffer)
		buffer.WriteString(` <span class="uk-transition-fade" data-uk-icon="icon: chevron-down"></span>
    </a>
  </th>
`)
	} else {
		o := params.GetOrdering(key)
		if o == nil {
			buffer.WriteString(`
    <th class="uk-transition-toggle uk-text-nowrap">
      <a class="`)
			hero.EscapeHTML(ctx.Profile.LinkClass(), buffer)
			buffer.WriteString(`" href="?`)
			hero.EscapeHTML(params.Clone(&query.Ordering{Column: key, Asc: true}).ToQueryString(ctx.Request), buffer)
			buffer.WriteString(`">
        `)
			hero.EscapeHTML(title, buffer)
			buffer.WriteString(` <span class="uk-transition-fade" data-uk-icon="icon: chevron-down"></span>
      </a>
    </th>
  `)
		} else if o.Asc {
			buffer.WriteString(`
    <th class=" uk-text-nowrap">
      <a class="`)
			hero.EscapeHTML(ctx.Profile.LinkClass(), buffer)
			buffer.WriteString(`" href="?`)
			hero.EscapeHTML(params.Clone(&query.Ordering{Column: key, Asc: false}).ToQueryString(ctx.Request), buffer)
			buffer.WriteString(`">
        `)
			hero.EscapeHTML(title, buffer)
			buffer.WriteString(` <span data-uk-icon="icon: chevron-down"></span>
      </a>
    </th>
  `)
		} else {
			buffer.WriteString(`
    <th class=" uk-text-nowrap">
      <a class="`)
			hero.EscapeHTML(ctx.Profile.LinkClass(), buffer)
			buffer.WriteString(`" href="?`)
			hero.EscapeHTML(params.Clone(&query.Ordering{Column: key, Asc: true}).ToQueryString(ctx.Request), buffer)
			buffer.WriteString(`">
        `)
			hero.EscapeHTML(title, buffer)
			buffer.WriteString(`
        <span data-uk-icon="icon: chevron-up"></span>
      </a>
    </th>
  `)
		}
	}

}
