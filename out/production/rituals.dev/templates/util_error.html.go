// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/util/error.html
// DO NOT EDIT!
package templates

import (
	"io"
	"net/http"

	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func InternalServerError(ed *util.ErrorDetail, r *http.Request, ctx web.RequestContext, w io.Writer) (int, error) {
	_buffer := hero.GetBuffer()
	defer hero.PutBuffer(_buffer)
	_buffer.WriteString(`<!DOCTYPE html>
<html lang="en">
`)
	Head(ctx, _buffer)
	_buffer.WriteString(`
<body style="visibility: hidden;">
`)
	Navbar(ctx, _buffer)
	_buffer.WriteString(`
<div id="`)
	hero.EscapeHTML(util.KeyContent, _buffer)
	_buffer.WriteString(`" data-uk-height-viewport="expand: true">
`)
	for _, flash := range ctx.Flashes {
		cls, content := web.ParseFlash(flash)
		_buffer.WriteString(`
  <div class="alert-top `)
		hero.EscapeHTML(cls, _buffer)
		_buffer.WriteString(`" data-uk-alert>
    <a class="uk-alert-close" href="#" data-uk-close=""></a>
    <p>`)
		hero.EscapeHTML(content, _buffer)
		_buffer.WriteString(`</p>
  </div>
`)
	}
	_buffer.WriteString(`
<div class="uk-section uk-section-small">
  <div class="uk-container">
    <div>
      <h1 class="uk-heading-hero">`)
	hero.EscapeHTML(ed.Message, _buffer)
	_buffer.WriteString(`</h1>
      <div class="uk-text-lead">Internal Server Error</div>
      `)
	ErrorStack(ed, ctx, _buffer)
	_buffer.WriteString(`
    </div>
    `)
	cause := ed.Cause
	for cause != nil {
		_buffer.WriteString(`
      <div class="uk-text-lead">Caused by</div>
      <div class="uk-text-lead">`)
		hero.EscapeHTML(cause.Message, _buffer)
		_buffer.WriteString(`</div>
      `)
		ErrorStack(cause, ctx, _buffer)
		cause = cause.Cause
	}
	_buffer.WriteString(`
  </div>
</div>
`)

	_buffer.WriteString(`
</div>
<script>window.addEventListener("load", function() { dom.initDom('`)
	hero.EscapeHTML(ctx.Profile.Theme.String(), _buffer)
	_buffer.WriteString(`'); }, false)</script>
</body>
</html>
`)
	return w.Write(_buffer.Bytes())

}
