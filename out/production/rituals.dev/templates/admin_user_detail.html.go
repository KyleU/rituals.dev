// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/admin/user/detail.html
// DO NOT EDIT!
package templates

import (
	"fmt"
	"io"

	"github.com/kyleu/rituals.dev/app/action"
	"github.com/kyleu/rituals.dev/app/auth"
	"github.com/kyleu/rituals.dev/app/estimate"
	"github.com/kyleu/rituals.dev/app/query"
	"github.com/kyleu/rituals.dev/app/retro"
	"github.com/kyleu/rituals.dev/app/sprint"
	"github.com/kyleu/rituals.dev/app/standup"
	"github.com/kyleu/rituals.dev/app/team"
	"github.com/kyleu/rituals.dev/app/user"
	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func AdminUserDetail(user *user.SystemUser, auths auth.Records, teams team.Sessions, sprints sprint.Sessions, estimates estimate.Sessions, standups standup.Sessions, retros retro.Sessions, actions action.Actions, params query.ParamSet, ctx web.RequestContext, w io.Writer) (int, error) {
	_buffer := hero.GetBuffer()
	defer hero.PutBuffer(_buffer)
	_buffer.WriteString(`<!DOCTYPE html>
<html lang="en">
`)
	Head(ctx, _buffer)
	_buffer.WriteString(`
<body style="visibility: hidden;">
`)
	Navbar(ctx, _buffer)
	_buffer.WriteString(`
<div id="`)
	hero.EscapeHTML(util.KeyContent, _buffer)
	_buffer.WriteString(`" data-uk-height-viewport="expand: true">
`)
	for _, flash := range ctx.Flashes {
		cls, content := web.ParseFlash(flash)
		_buffer.WriteString(`
  <div class="alert-top `)
		hero.EscapeHTML(cls, _buffer)
		_buffer.WriteString(`" data-uk-alert>
    <a class="uk-alert-close" href="#" data-uk-close=""></a>
    <p>`)
		hero.EscapeHTML(content, _buffer)
		_buffer.WriteString(`</p>
  </div>
`)
	}
	_buffer.WriteString(`
<div class="uk-section uk-section-small">
  <div class="uk-container">
    <div class="uk-card uk-card-body">
      <h3 class="uk-card-title">User Detail</h3>
      <table class="uk-table uk-table-divider uk-text-left">
        <tbody>
          <tr>
            <th>ID</th>
            <td>`)
	hero.EscapeHTML(user.UserID.String(), _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Name</th>
            <td>`)
	hero.EscapeHTML(user.Name, _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Role</th>
            <td>`)
	hero.EscapeHTML(user.Role, _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Theme</th>
            <td>`)
	hero.EscapeHTML(user.Theme, _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Nav Color</th>
            <td>`)
	hero.EscapeHTML(user.NavColor, _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Link Color</th>
            <td>`)
	hero.EscapeHTML(user.LinkColor, _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Picture</th>
            <td>
              `)
	if len(user.Picture) > 0 {
		_buffer.WriteString(`
                <img src="`)
		hero.EscapeHTML(user.Picture, _buffer)
		_buffer.WriteString(`" />
              `)
	}
	_buffer.WriteString(`
            </td>
          </tr>
          <tr>
            <th>Locale</th>
            <td>`)
	hero.EscapeHTML(fmt.Sprintf("%v", user.Locale), _buffer)
	_buffer.WriteString(`</td>
          </tr>
          <tr>
            <th>Created</th>
            <td>`)
	ComponentDateTime(&user.Created, _buffer)
	_buffer.WriteString(`</td>
          </tr>
        </tbody>
      </table>
    </div>

    `)
	if len(auths) > 0 {
		_buffer.WriteString(`
      <div class="uk-card uk-card-body uk-margin-top">
        <h3 class="uk-card-title">Auth Records</h3>
        `)
		AdminAuthTable(auths, params.Get(util.KeyAuth, ctx.Logger), ctx, _buffer)
		_buffer.WriteString(`
      </div>
    `)
	}
	if len(teams) > 0 {
		_buffer.WriteString(`
      <div class="uk-card uk-card-body uk-margin-top">
        <h3 class="uk-card-title">Teams</h3>
        `)
		AdminTeamTable(teams, params.Get(util.SvcTeam.Key, ctx.Logger), ctx, _buffer)
		_buffer.WriteString(`
      </div>
    `)
	}
	if len(sprints) > 0 {
		_buffer.WriteString(`
      <div class="uk-card uk-card-body uk-margin-top">
        <h3 class="uk-card-title">Sprints</h3>
        `)
		AdminSprintTable(sprints, params.Get(util.SvcSprint.Key, ctx.Logger), ctx, _buffer)
		_buffer.WriteString(`
      </div>
    `)
	}
	if len(estimates) > 0 {
		_buffer.WriteString(`
      <div class="uk-card uk-card-body uk-margin-top">
        <h3 class="uk-card-title">`)
		hero.EscapeHTML(util.SvcEstimate.PluralTitle, _buffer)
		_buffer.WriteString(`</h3>
        `)
		AdminEstimateTable(estimates, params.Get(util.SvcEstimate.Key, ctx.Logger), ctx, _buffer)
		_buffer.WriteString(`
      </div>
    `)
	}
	if len(standups) > 0 {
		_buffer.WriteString(`
      <div class="uk-card uk-card-body uk-margin-top">
        <h3 class="uk-card-title">`)
		hero.EscapeHTML(util.SvcStandup.PluralTitle, _buffer)
		_buffer.WriteString(`</h3>
        `)
		AdminStandupTable(standups, params.Get(util.SvcStandup.Key, ctx.Logger), ctx, _buffer)
		_buffer.WriteString(`
      </div>
    `)
	}
	if len(retros) > 0 {
		_buffer.WriteString(`
      <div class="uk-card uk-card-body uk-margin-top">
        <h3 class="uk-card-title">`)
		hero.EscapeHTML(util.SvcRetro.PluralTitle, _buffer)
		_buffer.WriteString(`</h3>
        `)
		AdminRetroTable(retros, params.Get(util.SvcRetro.Key, ctx.Logger), ctx, _buffer)
		_buffer.WriteString(`
      </div>
    `)
	}
	if len(actions) > 0 {
		_buffer.WriteString(`
      <div class="uk-card uk-card-body uk-margin-top">
        <h3 class="uk-card-title">Actions</h3>
        `)
		AdminActionTable(actions, params.Get(util.KeyAction, ctx.Logger), ctx, _buffer)
		_buffer.WriteString(`
      </div>
    `)
	}
	_buffer.WriteString(`
  </div>
</div>
`)

	_buffer.WriteString(`
</div>
<script>window.addEventListener("load", function() { dom.initDom('`)
	hero.EscapeHTML(ctx.Profile.Theme.String(), _buffer)
	_buffer.WriteString(`'); }, false)</script>
</body>
</html>
`)
	return w.Write(_buffer.Bytes())

}
