// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/auth/list.html
// DO NOT EDIT!
package templates

import (
	"bytes"

	"github.com/kyleu/rituals.dev/app/auth"
	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func AuthSigninList(auths auth.Records, ctx web.RequestContext, buffer *bytes.Buffer) {
	buffer.WriteString(`
<div id="signin-card" class="uk-card uk-card-body">
  <h3 class="uk-card-title">
    <a class="right `)
	hero.EscapeHTML(ctx.Profile.LinkClass(), buffer)
	buffer.WriteString(` uk-icon-button" data-uk-icon="question" href="" onclick="return events.openModal('auth');" title="sign in information"></a>
    Sign In
  </h3>
  <ul class="uk-list uk-list-divider uk-margin-top">
    `)
	for _, p := range ctx.App.Auth.EnabledProviders {

		var curr auth.Records
		for _, a := range auths {
			if a.Provider == p {
				curr = append(curr, a)
			}
		}

		AuthSigninLink(p, curr, ctx, buffer)
	}
	buffer.WriteString(`
  </ul>
</div>
<div id="modal-auth" data-uk-modal>
  <div class="uk-modal-dialog uk-margin-auto-vertical">
    <button class="uk-button uk-modal-close-default" type="button" data-uk-close></button>
    <div class="uk-modal-header">
      <h2 class="uk-modal-title">Signing in</h2>
    </div>
    <div class="uk-modal-body" data-uk-overflow-auto>
      <p>You can sign in with `)
	hero.EscapeHTML(util.OxfordComma(ctx.App.Auth.EnabledProviders.Names(), "and"), buffer)
	buffer.WriteString(`</p>
      <p>We store your email address and a link to your profile picture</p>
      <p>This information is only used to let you control access to your stuff</p>
      <p>We don't send you any mail or push notifications or anything shady</p>
    </div>
    <div class="uk-modal-footer uk-text-right">
      <button class="uk-button uk-button-default" onclick="events.hideModal('auth');" type="button">Close</button>
    </div>
  </div>
</div>
`)

}
