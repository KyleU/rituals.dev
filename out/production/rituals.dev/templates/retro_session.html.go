// Code generated by hero.
// source: github.com/kyleu/rituals.dev/web/templates/retro/session.html
// DO NOT EDIT!
package templates

import (
	"bytes"

	"github.com/kyleu/rituals.dev/app/auth"
	"github.com/kyleu/rituals.dev/app/retro"
	"github.com/kyleu/rituals.dev/app/util"
	"github.com/kyleu/rituals.dev/app/web"
	"github.com/shiyanhui/hero"
)

func RetroSession(model *retro.Session, auths auth.Records, ctx web.RequestContext, buffer *bytes.Buffer) {
	buffer.WriteString(`
<div class="uk-card uk-card-body uk-transition-toggle">
  <h3 class="uk-card-title">
    `)
	ComponentSessionIcon(util.SvcRetro, ctx, buffer)
	buffer.WriteString(`
    <span class="model-icon h3-icon" onclick="events.openModal('`)
	hero.EscapeHTML(util.KeySession, buffer)
	buffer.WriteString(`');" data-uk-icon="icon: `)
	hero.EscapeHTML(util.SvcRetro.Icon, buffer)
	buffer.WriteString(`;"></span>
    <span id="model-title" onclick="events.openModal('`)
	hero.EscapeHTML(util.KeySession, buffer)
	buffer.WriteString(`');">`)
	hero.EscapeHTML(model.Title, buffer)
	buffer.WriteString(`</span>
  </h3>
  <span id="sprint-link-container"></span>
  `)
	hero.EscapeHTML(util.SvcRetro.Key, buffer)
	buffer.WriteString(`
  <span id="team-link-container"></span>
</div>
<div id="modal-session" data-uk-modal>
  <div class="uk-modal-dialog uk-margin-auto-vertical">
    <button class="uk-button uk-modal-close-default" type="button" data-uk-close></button>
    <div class="uk-modal-header">
      <h2 class="uk-modal-title">Edit `)
	hero.EscapeHTML(util.SvcRetro.Title, buffer)
	buffer.WriteString(`</h2>
    </div>
    <form class="uk-form-stacked" id="form-detail" onsubmit="retro.onSubmitRetroSession();return false;">
      <div class="uk-modal-body" data-uk-overflow-auto>
        <fieldset class="uk-fieldset">
          `)
	RetroForm(model.Title, model.Categories, nil, nil, auths, ctx, buffer)
	buffer.WriteString(`
        </fieldset>
      </div>
      <div class="uk-modal-footer uk-text-right">
        <button class="uk-button uk-button-default" type="submit">Save</button>
      </div>
    </form>
  </div>
</div>
`)

}
