// Code generated by qtc from "Table.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Content managed by Project Forge, see [projectforge.md] for details. -->

//line views/vsprint/vshistory/Table.html:2
package vshistory

//line views/vsprint/vshistory/Table.html:2
import (
	"github.com/kyleu/rituals/app"
	"github.com/kyleu/rituals/app/controller/cutil"
	"github.com/kyleu/rituals/app/lib/filter"
	"github.com/kyleu/rituals/app/sprint"
	"github.com/kyleu/rituals/app/sprint/shistory"
	"github.com/kyleu/rituals/views/components"
)

//line views/vsprint/vshistory/Table.html:11
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vsprint/vshistory/Table.html:11
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vsprint/vshistory/Table.html:11
func StreamTable(qw422016 *qt422016.Writer, models shistory.SprintHistories, sprintsBySprintID sprint.Sprints, params filter.ParamSet, as *app.State, ps *cutil.PageState) {
//line views/vsprint/vshistory/Table.html:11
	qw422016.N().S(`
`)
//line views/vsprint/vshistory/Table.html:12
	prms := params.Get("shistory", nil, ps.Logger).Sanitize("shistory")

//line views/vsprint/vshistory/Table.html:12
	qw422016.N().S(`  <table>
    <thead>
      <tr>
        `)
//line views/vsprint/vshistory/Table.html:16
	components.StreamTableHeaderSimple(qw422016, "shistory", "slug", "Slug", "String text", prms, ps.URI, ps)
//line views/vsprint/vshistory/Table.html:16
	qw422016.N().S(`
        `)
//line views/vsprint/vshistory/Table.html:17
	components.StreamTableHeaderSimple(qw422016, "shistory", "sprint_id", "Sprint ID", "UUID in format (00000000-0000-0000-0000-000000000000)", prms, ps.URI, ps)
//line views/vsprint/vshistory/Table.html:17
	qw422016.N().S(`
        `)
//line views/vsprint/vshistory/Table.html:18
	components.StreamTableHeaderSimple(qw422016, "shistory", "sprint_name", "Sprint Name", "String text", prms, ps.URI, ps)
//line views/vsprint/vshistory/Table.html:18
	qw422016.N().S(`
        `)
//line views/vsprint/vshistory/Table.html:19
	components.StreamTableHeaderSimple(qw422016, "shistory", "created", "Created", "Date and time, in almost any format", prms, ps.URI, ps)
//line views/vsprint/vshistory/Table.html:19
	qw422016.N().S(`
      </tr>
    </thead>
    <tbody>
`)
//line views/vsprint/vshistory/Table.html:23
	for _, model := range models {
//line views/vsprint/vshistory/Table.html:23
		qw422016.N().S(`      <tr>
        <td><a href="/admin/db/sprint/history/`)
//line views/vsprint/vshistory/Table.html:25
		qw422016.N().U(model.Slug)
//line views/vsprint/vshistory/Table.html:25
		qw422016.N().S(`">`)
//line views/vsprint/vshistory/Table.html:25
		qw422016.E().S(model.Slug)
//line views/vsprint/vshistory/Table.html:25
		qw422016.N().S(`</a></td>
        <td class="nowrap">
          `)
//line views/vsprint/vshistory/Table.html:27
		components.StreamDisplayUUID(qw422016, &model.SprintID)
//line views/vsprint/vshistory/Table.html:27
		if x := sprintsBySprintID.Get(model.SprintID); x != nil {
//line views/vsprint/vshistory/Table.html:27
			qw422016.N().S(` (`)
//line views/vsprint/vshistory/Table.html:27
			qw422016.E().S(x.TitleString())
//line views/vsprint/vshistory/Table.html:27
			qw422016.N().S(`)`)
//line views/vsprint/vshistory/Table.html:27
		}
//line views/vsprint/vshistory/Table.html:27
		qw422016.N().S(`
          <a title="Sprint" href="`)
//line views/vsprint/vshistory/Table.html:28
		qw422016.E().S(`/admin/db/sprint` + `/` + model.SprintID.String())
//line views/vsprint/vshistory/Table.html:28
		qw422016.N().S(`">`)
//line views/vsprint/vshistory/Table.html:28
		components.StreamSVGRef(qw422016, "sprint", 18, 18, "", ps)
//line views/vsprint/vshistory/Table.html:28
		qw422016.N().S(`</a>
        </td>
        <td>`)
//line views/vsprint/vshistory/Table.html:30
		qw422016.E().S(model.SprintName)
//line views/vsprint/vshistory/Table.html:30
		qw422016.N().S(`</td>
        <td>`)
//line views/vsprint/vshistory/Table.html:31
		components.StreamDisplayTimestamp(qw422016, &model.Created)
//line views/vsprint/vshistory/Table.html:31
		qw422016.N().S(`</td>
      </tr>
`)
//line views/vsprint/vshistory/Table.html:33
	}
//line views/vsprint/vshistory/Table.html:34
	if prms.HasNextPage(len(models)+prms.Offset) || prms.HasPreviousPage() {
//line views/vsprint/vshistory/Table.html:34
		qw422016.N().S(`      <tr>
        <td colspan="4">`)
//line views/vsprint/vshistory/Table.html:36
		components.StreamPagination(qw422016, len(models)+prms.Offset, prms, ps.URI)
//line views/vsprint/vshistory/Table.html:36
		qw422016.N().S(`</td>
      </tr>
`)
//line views/vsprint/vshistory/Table.html:38
	}
//line views/vsprint/vshistory/Table.html:38
	qw422016.N().S(`    </tbody>
  </table>
`)
//line views/vsprint/vshistory/Table.html:41
}

//line views/vsprint/vshistory/Table.html:41
func WriteTable(qq422016 qtio422016.Writer, models shistory.SprintHistories, sprintsBySprintID sprint.Sprints, params filter.ParamSet, as *app.State, ps *cutil.PageState) {
//line views/vsprint/vshistory/Table.html:41
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsprint/vshistory/Table.html:41
	StreamTable(qw422016, models, sprintsBySprintID, params, as, ps)
//line views/vsprint/vshistory/Table.html:41
	qt422016.ReleaseWriter(qw422016)
//line views/vsprint/vshistory/Table.html:41
}

//line views/vsprint/vshistory/Table.html:41
func Table(models shistory.SprintHistories, sprintsBySprintID sprint.Sprints, params filter.ParamSet, as *app.State, ps *cutil.PageState) string {
//line views/vsprint/vshistory/Table.html:41
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsprint/vshistory/Table.html:41
	WriteTable(qb422016, models, sprintsBySprintID, params, as, ps)
//line views/vsprint/vshistory/Table.html:41
	qs422016 := string(qb422016.B)
//line views/vsprint/vshistory/Table.html:41
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsprint/vshistory/Table.html:41
	return qs422016
//line views/vsprint/vshistory/Table.html:41
}
